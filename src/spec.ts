/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/utils/ping": {
    /** Ping the server to see if it is up and running, this request does not require any prerequisites */
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              ping: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/stores": {
    /** Get all stores */
    get: {
      parameters: {
        query?: {
          includeDeleted?: boolean;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              stores: {
                  /** Format: uuid */
                  id: string;
                  title: string;
                  deleted: boolean;
                }[];
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
    /** Create a store */
    post: {
      requestBody: {
        content: {
          "application/json": {
            title: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** Format: uuid */
              id: string;
              title: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/stores/{storeID}": {
    /** Delete a store */
    delete: {
      parameters: {
        path: {
          storeID: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/products/tray": {
    /** Get tray products based on filters */
    get: {
      parameters: {
        query?: {
          search?: string;
          onlyIDs?: string[];
          includeDeleted?: boolean;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              products: {
                  /** Format: uuid */
                  id: string;
                  title: string;
                  price: number;
                  position: number;
                  deleted: boolean;
                }[];
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
    /** Create a tray product */
    post: {
      requestBody: {
        content: {
          "application/json": {
            title: string;
            price: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** Format: uuid */
              id: string;
              title: string;
              price: number;
              position: number;
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/products/tray/{productID}": {
    /** Delete a tray product */
    delete: {
      parameters: {
        path: {
          productID: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
    /** Update the title and price of a tray product */
    patch: {
      parameters: {
        path: {
          productID: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            newTitle?: string;
            newPrice?: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** Format: uuid */
              newID: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/products/tray/{productID}/position": {
    /** Change the position of a tray product */
    patch: {
      parameters: {
        path: {
          productID: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            newPosition: number;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/products/standard": {
    /** Get standard products based on filters */
    get: {
      parameters: {
        query?: {
          search?: string;
          onlyIDs?: string[];
          includeDeleted?: boolean;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              products: {
                  /** Format: uuid */
                  id: string;
                  title: string;
                  unit: string;
                  deleted: boolean;
                }[];
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
    /** Create a standard product */
    post: {
      requestBody: {
        content: {
          "application/json": {
            title: string;
            unit: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** Format: uuid */
              id: string;
              title: string;
              unit: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/products/standard/{productID}": {
    /** Delete a standard product */
    delete: {
      parameters: {
        path: {
          productID: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
    /** Update the title and unit of a standard product */
    patch: {
      parameters: {
        path: {
          productID: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            newTitle?: string;
            newUnit?: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** Format: uuid */
              newID: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/orders": {
    /** Get orders based on filters */
    get: {
      parameters: {
        query?: {
          id?: string;
          firstname?: string;
          lastname?: string;
          email?: string;
          phone?: string;
          status?: ("PENDING" | "READY" | "TAKEN" | "CANCELLED")[];
          store?: string[];
          /** @description timestamp (in milliseconds) */
          date?: number;
          /** @description timestamp (in milliseconds) */
          toDate?: number;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              orders: ({
                  /** Format: uuid */
                  id: string;
                  firstname: string;
                  lastname: string;
                  email: string | null;
                  phone: string | null;
                  store: {
                    /** Format: uuid */
                    id: string;
                    title: string;
                  };
                  /** @enum {string} */
                  status: "PENDING" | "READY" | "TAKEN" | "CANCELLED";
                })[];
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
    /** Create an order */
    post: {
      requestBody: {
        content: {
          "application/json": {
            firstname: string;
            lastname: string;
            /** Format: email */
            email?: string;
            phone?: string;
            /** Format: uuid */
            takerID: string;
            /** Format: uuid */
            storeID: string;
            standardItems: {
                /** Format: uuid */
                id: string;
                quantity: number;
              }[];
            trayItems: {
                /** Format: uuid */
                id: string;
                quantity: number;
              }[];
            /** @description timestamp (in milliseconds) */
            date: number;
            note?: string;
            sendEmail: boolean;
            sendSMS: boolean;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** Format: uuid */
              id: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/orders/{orderID}": {
    /** Get an order */
    get: {
      parameters: {
        path: {
          orderID: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              order: {
                /** Format: uuid */
                id: string;
                firstname: string;
                lastname: string;
                email: string | null;
                phone: string | null;
                standardItems: {
                    /** Format: uuid */
                    id: string;
                    title: string;
                    unit: string;
                    quantity: number;
                  }[];
                trayItems: {
                    /** Format: uuid */
                    id: string;
                    title: string;
                    price: number;
                    quantity: number;
                  }[];
                note: string | null;
                store: {
                  /** Format: uuid */
                  id: string;
                  title: string;
                };
                price: number | null;
                storageCount: number | null;
                location: string | null;
                taker: {
                  /** Format: uuid */
                  id: string;
                  name: string;
                };
                preparer: {
                  /** Format: uuid */
                  id: string;
                  name: string;
                } | null;
                /** @enum {string} */
                status: "PENDING" | "READY" | "TAKEN" | "CANCELLED";
              };
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
    /** Update an order */
    post: {
      parameters: {
        path: {
          orderID: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/auth/sign-in": {
    /** Login to account */
    post: {
      requestBody: {
        content: {
          "application/json": {
            name: string;
            password: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              token: string;
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/accounts": {
    /** Get all users information */
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              me: {
                /** Format: uuid */
                id: string;
                name: string;
                /** @enum {string} */
                role: "ADMIN" | "USER";
              };
              accounts: ({
                  /** Format: uuid */
                  id: string;
                  name: string;
                  /** @enum {string} */
                  role: "ADMIN" | "USER";
                })[];
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
    /** Create an account from an ADMIN account */
    post: {
      requestBody: {
        content: {
          "application/json": {
            name: string;
            password: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** Format: uuid */
              id: string;
              name: string;
              /** @enum {string} */
              role: "ADMIN" | "USER";
            };
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/accounts/{accountID}": {
    /** Delete an USER with an ADMIN account */
    delete: {
      parameters: {
        path: {
          accountID: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/accounts/{accountID}/password": {
    /** Update the password for your own account or anyone else's if you are ADMIN */
    patch: {
      parameters: {
        path: {
          accountID: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            newPassword: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": Record<string, never>;
          };
        };
        /** @description Default Response */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export type components = Record<string, never>;

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;